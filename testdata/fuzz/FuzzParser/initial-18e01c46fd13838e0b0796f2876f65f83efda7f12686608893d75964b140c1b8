go test fuzz v1
string("\nFROM busybox AS base\nRUN mkdir -m 0777 /out\nRUN id -un > /out/rootuser\n\n# Make sure our defaults work\nRUN [ \"$(id -u):$(id -g)/$(id -un):$(id -gn)\" = '0:0/root:root' ]\n\n# TODO decide if \"args.user = strconv.Itoa(syscall.Getuid())\" is acceptable behavior for changeUser in sysvinit instead of \"return nil\" when \"USER\" isn't specified (so that we get the proper group list even if that is the empty list, even in the default case of not supplying an explicit USER to run as, which implies USER 0)\nUSER root\nRUN [ \"$(id -G):$(id -Gn)\" = '0 10:root wheel' ]\n\n# Setup dockerio user and group\nRUN echo 'dockerio:x:1001:1001::/bin:/bin/false' >> /etc/passwd && \\\n\techo 'dockerio:x:1001:' >> /etc/group\n\n# Make sure we can switch to our user and all the information is exactly as we expect it to be\nUSER dockerio\nRUN [ \"$(id -u):$(id -g)/$(id -un):$(id -gn)/$(id -G):$(id -Gn)\" = '1001:1001/dockerio:dockerio/1001:dockerio' ]\n\n# Switch back to root and double check that worked exactly as we might expect it to\nUSER root\nRUN [ \"$(id -u):$(id -g)/$(id -un):$(id -gn)/$(id -G):$(id -Gn)\" = '0:0/root:root/0 10:root wheel' ] && \\\n        # Add a \"supplementary\" group for our dockerio user\n\techo 'supplementary:x:1002:dockerio' >> /etc/group\n\n# ... and then go verify that we get it like we expect\nUSER dockerio\nRUN [ \"$(id -u):$(id -g)/$(id -un):$(id -gn)/$(id -G):$(id -Gn)\" = '1001:1001/dockerio:dockerio/1001 1002:dockerio supplementary' ]\nUSER 1001\nRUN [ \"$(id -u):$(id -g)/$(id -un):$(id -gn)/$(id -G):$(id -Gn)\" = '1001:1001/dockerio:dockerio/1001 1002:dockerio supplementary' ]\n\n# super test the new \"user:group\" syntax\nUSER dockerio:dockerio\nRUN [ \"$(id -u):$(id -g)/$(id -un):$(id -gn)/$(id -G):$(id -Gn)\" = '1001:1001/dockerio:dockerio/1001:dockerio' ]\nUSER 1001:dockerio\nRUN [ \"$(id -u):$(id -g)/$(id -un):$(id -gn)/$(id -G):$(id -Gn)\" = '1001:1001/dockerio:dockerio/1001:dockerio' ]\nUSER dockerio:1001\nRUN [ \"$(id -u):$(id -g)/$(id -un):$(id -gn)/$(id -G):$(id -Gn)\" = '1001:1001/dockerio:dockerio/1001:dockerio' ]\nUSER 1001:1001\nRUN [ \"$(id -u):$(id -g)/$(id -un):$(id -gn)/$(id -G):$(id -Gn)\" = '1001:1001/dockerio:dockerio/1001:dockerio' ]\nUSER dockerio:supplementary\nRUN [ \"$(id -u):$(id -g)/$(id -un):$(id -gn)/$(id -G):$(id -Gn)\" = '1001:1002/dockerio:supplementary/1002:supplementary' ]\nUSER dockerio:1002\nRUN [ \"$(id -u):$(id -g)/$(id -un):$(id -gn)/$(id -G):$(id -Gn)\" = '1001:1002/dockerio:supplementary/1002:supplementary' ]\nUSER 1001:supplementary\nRUN [ \"$(id -u):$(id -g)/$(id -un):$(id -gn)/$(id -G):$(id -Gn)\" = '1001:1002/dockerio:supplementary/1002:supplementary' ]\nUSER 1001:1002\nRUN [ \"$(id -u):$(id -g)/$(id -un):$(id -gn)/$(id -G):$(id -Gn)\" = '1001:1002/dockerio:supplementary/1002:supplementary' ]\n\n# make sure unknown uid/gid still works properly\nUSER 1042:1043\nRUN [ \"$(id -u):$(id -g)/$(id -un):$(id -gn)/$(id -G):$(id -Gn)\" = '1042:1043/1042:1043/1043:1043' ]\nUSER daemon\nRUN id -un > /out/daemonuser\nFROM scratch\nCOPY --from=base /out /\nUSER nobody\n")
